{"version":3,"sources":["Header.js","axios.js","TinderCards.js","BottomIcons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setpeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","url","BottomIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAuBeA,MAjBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACA,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAG3C,qBAAKG,IAAI,6CAA6CC,IAAI,OAAOJ,UAAU,iBAE3E,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,kECVnCK,E,OAJCC,EAAMC,OAAO,CACzBC,QAAS,yCC4CEC,MA3Cf,WAAwB,IAAD,EACKC,mBAAS,IADd,mBACbC,EADa,KACNC,EADM,KAmBnB,OAhBAC,qBAAU,WAAM,4CACb,4BAAAC,EAAA,sEACoBR,EAAMS,IAAI,iBAD9B,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADa,uBAAC,WAAD,wBAObC,KACA,IASC,qBAAKlB,UAAU,cAAf,SACI,qBAAKA,UAAU,wBAAf,SACCW,EAAOQ,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CACApB,UAAU,QACVqB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAbGC,EAaiBJ,EAAOK,UAZ5CC,QAAQC,IAAI,WAAWH,GADd,IAAWA,GAcZI,iBAAkB,kBAXZH,EAW2BL,EAAOK,UAVhDC,QAAQC,IAAIF,EAAK,QADJ,IAACA,GAON,SAOI,qBAAKI,MAAQ,CAACC,gBAAgB,OAAD,OAASV,EAAOW,IAAhB,MAC7B/B,UAAU,OADV,SAEC,6BAAKoB,EAAOK,UAROL,EAAOK,c,6FCMhCO,MA1Bf,WACI,OACI,sBAAKhC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYD,UAAU,aAE1B,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAWD,UAAU,WAIzB,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAUD,UAAU,gBAIxB,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAcD,UAAU,YAE5B,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAaD,UAAU,gBCbxBiC,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07be1581.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n        <IconButton>\r\n            <PersonIcon fontSize=\"large\" className=\"header_icon\"/>\r\n        </IconButton>\r\n        \r\n        <img src=\"https://wallpapercave.com/wp/wp2552200.jpg\" alt=\"logo\" className=\"header_image\" />\r\n\r\n        <IconButton>\r\n            <ForumIcon fontSize=\"large\" className=\"header_icon\"></ForumIcon>\r\n        </IconButton>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\n\r\nconst instance =axios.create({\r\n    baseURL: ' https://tinder-india.herokuapp.com/'\r\n})\r\n\r\nexport default instance;","import React,{useState,useEffect} from 'react';\r\nimport \"./TinderCards.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport axios from './axios';\r\nfunction TinderCards() {\r\n    const[people,setpeople]=useState([]);\r\n\r\n    useEffect(() => {\r\n       async function fetchData(){\r\n           const req=await axios.get(\"./tinder/card\");\r\n\r\n           setpeople(req.data);\r\n           \r\n       }\r\n       fetchData();\r\n    }, []);\r\n\r\n    const swiped=(direction,nameToDelete)=>{\r\n        console.log(\"removing\"+nameToDelete);\r\n    }\r\n    const outofFrame=(name)=>{\r\n        console.log(name+\"left\");\r\n    }\r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards_Container\">\r\n            {people.map((person) => (\r\n                <TinderCard \r\n                className=\"swipe\" key ={person.name}\r\n                preventSwipe={[\"up\",\"down\"]}\r\n                onSwipe={(dir) => swiped(dir,person.name) }\r\n                onCardLeftScreen={()=>outofFrame(person.name)} \r\n                >\r\n                    \r\n                    <div style={ {backgroundImage: `url(${person.url})`}}\r\n                    className=\"card\">\r\n                     <h3>{person.name}</h3>   \r\n                    </div>\r\n                </TinderCard>\r\n            ))}\r\n                </div>   \r\n               \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards\r\n","import React from 'react'\r\nimport \"./BottomIcons.css\";\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nfunction BottomIcons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton>\r\n                <ReplayIcon className=\"replay\"></ReplayIcon>\r\n            </IconButton>\r\n            <IconButton>\r\n                <CloseIcon className=\"left\">\r\n\r\n                </CloseIcon>\r\n            </IconButton>\r\n            <IconButton>\r\n                <StarIcon className=\"favourite\">\r\n\r\n                </StarIcon>\r\n            </IconButton>\r\n            <IconButton>\r\n                <FavoriteIcon className=\"right\"></FavoriteIcon>\r\n            </IconButton>\r\n            <IconButton>\r\n                <FlashOnIcon className=\"light\"></FlashOnIcon>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomIcons\r\n","\nimport './App.css';\nimport Header from './Header';\nimport TinderCards from './TinderCards';\nimport BottomIcons from './BottomIcons';\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header/>\n      <TinderCards />\n      <BottomIcons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}